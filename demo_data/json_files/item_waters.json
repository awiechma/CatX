{
   "id":"water-bodies-model-pystac",
   "bbox":[
      -121.87680832296513,
      36.93063805399626,
      -120.06532070709298,
      38.84330548198025
   ],
   "type":"Feature",
   "links":[
      {
         "rel":"collection",
         "type":"application/json",
         "href":"https://ai-extensions-stac.terradue.com/collections/ML-Models"
      },
      {
         "rel":"parent",
         "type":"application/json",
         "href":"https://ai-extensions-stac.terradue.com/collections/ML-Models"
      },
      {
         "rel":"root",
         "type":"application/json",
         "href":"https://ai-extensions-stac.terradue.com/"
      },
      {
         "rel":"self",
         "type":"application/geo+json",
         "href":"https://ai-extensions-stac.terradue.com/collections/ML-Models/items/water-bodies-model-pystac"
      }
   ],
   "assets":{
      "model":{
         "href":"https://github.com/ai-extensions/notebooks/raw/main/scenario-7/model/best_model.onnx",
         "type":"application/octet-stream; framework=onnx; profile=onnx",
         "roles":[
            "mlm:model"
         ],
         "title":"ONNX Model"
      },
      "ml-training":{
         "href":"https://github.com/ai-extensions/notebooks/releases/download/v1.0.8/water-bodies-app-training.1.0.8.cwl",
         "type":"application/cwl+yaml",
         "roles":[
            "ml-model:training-runtime",
            "runtime",
            "mlm:training-runtime"
         ],
         "title":"Workflow for water bodies training"
      },
      "ml-inference":{
         "href":"https://github.com/ai-extensions/notebooks/releases/download/v1.0.8/water-bodies-app-inference.1.0.8.cwl",
         "type":"application/cwl+yaml",
         "roles":[
            "ml-model:inference-runtime",
            "runtime",
            "mlm:inference-runtime"
         ],
         "title":"Workflow for water bodies inference"
      }
   },
   "geometry":{
      "type":"Polygon",
      "coordinates":[
         [
            [
               -121.87680832296513,
               36.93063805399626
            ],
            [
               -120.06532070709298,
               36.93063805399626
            ],
            [
               -120.06532070709298,
               38.84330548198025
            ],
            [
               -121.87680832296513,
               38.84330548198025
            ],
            [
               -121.87680832296513,
               36.93063805399626
            ]
         ]
      ]
   },
   "collection":"ml-models-rs",
   "properties":{
      "datetime":"2024-07-26T07:53:09.308573Z",
      "mlm:name":"Water-Bodies-S6_Scikit-Learn-RandomForestClassifier",
      "mlm:input":[
         {
            "name":"EO Data",
            "bands":[
               "B01",
               "B02",
               "B03",
               "B04",
               "B08",
               "B8A",
               "B09",
               "B11",
               "B12",
               "NDVI",
               "NDWI1",
               "NDWI2"
            ],
            "input":{
               "shape":[
                  -1,
                  12,
                  10980,
                  10980
               ],
               "data_type":"float32",
               "dim_order":[
                  "batch",
                  "channel",
                  "height",
                  "width"
               ]
            }
         }
      ],
      "mlm:tasks":[
         "segmentation",
         "semantic-segmentation"
      ],
      "mlm:output":[
         {
            "name":"CLASSIFICATION",
            "tasks":[
               "segmentation",
               "semantic-segmentation"
            ],
            "result":{
               "shape":[
                  -1,
                  10980,
                  10980
               ],
               "data_type":"uint8",
               "dim_order":[
                  "batch",
                  "height",
                  "width"
               ]
            },
            "classification:classes":[
               {
                  "name":"NON-WATER",
                  "value":0,
                  "nodata":false,
                  "color_hint":"000000",
                  "description":"pixels without water"
               },
               {
                  "name":"WATER",
                  "value":1,
                  "nodata":false,
                  "color_hint":"0000FF",
                  "description":"pixels with water"
               },
               {
                  "name":"CLOUD",
                  "value":2,
                  "nodata":false,
                  "color_hint":"FFFFFF",
                  "description":"pixels with cloud"
               }
            ]
         }
      ],
      "description":"Water classifier using Scikit-Learn Random-Forest algorithm onto input imagery bands",
      "end_datetime":"2023-06-18T23:59:59Z",
      "mlm:compiled":false,
      "raster:bands":[
         {
            "name":"B01",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"coastal",
            "bits_per_sample":15,
            "spatial_resolution":60
         },
         {
            "name":"B02",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"blue",
            "bits_per_sample":15,
            "spatial_resolution":10
         },
         {
            "name":"B03",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"green",
            "bits_per_sample":15,
            "spatial_resolution":10
         },
         {
            "name":"B04",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"red",
            "bits_per_sample":15,
            "spatial_resolution":10
         },
         {
            "name":"B08",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"nir",
            "bits_per_sample":15,
            "spatial_resolution":10
         },
         {
            "name":"B8A",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"nir08",
            "bits_per_sample":15,
            "spatial_resolution":20
         },
         {
            "name":"B09",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"nir09",
            "bits_per_sample":15,
            "spatial_resolution":60
         },
         {
            "name":"B11",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"swir16",
            "bits_per_sample":15,
            "spatial_resolution":20
         },
         {
            "name":"B12",
            "unit":"m",
            "scale":0.0001,
            "nodata":0,
            "offset":0,
            "data_type":"uint16",
            "common_name":"swir22",
            "bits_per_sample":15,
            "spatial_resolution":20
         },
         {
            "name":"NDVI",
            "nodata":0,
            "data_type":"float32",
            "common_name":"ndvi",
            "processing:expression":{
               "format":"rio-calc",
               "expression":"(B08 - B04) / (B08 + B04)"
            }
         },
         {
            "name":"NDWI1",
            "nodata":0,
            "data_type":"float32",
            "common_name":"ndwi1",
            "processing:expression":{
               "format":"rio-calc",
               "expression":"(B03 - B08) / (B03 + B08)"
            }
         },
         {
            "name":"NDWI2",
            "nodata":0,
            "data_type":"float32",
            "common_name":"ndwi2",
            "processing:expression":{
               "format":"rio-calc",
               "expression":"(B08 - B11) / (B08 + B11)"
            }
         }
      ],
      "ml-model:type":"ml-model",
      "mlm:framework":"scikit-learn",
      "start_datetime":"2023-06-13T00:00:00Z",
      "mlm:accelerator":"amd64",
      "mlm:architecture":"RandomForestClassifier",
      "mlm:hyperparameters":{
         "n_jobs":-1,
         "verbose":0,
         "bootstrap":true,
         "ccp_alpha":0,
         "criterion":"gini",
         "oob_score":false,
         "warm_start":true,
         "max_features":"sqrt",
         "n_estimators":200,
         "random_state":19,
         "min_samples_leaf":1,
         "min_samples_split":2,
         "min_impurity_decrease":0,
         "min_weight_fraction_leaf":0
      },
      "ml-model:training-os":"linux",
      "ml-model:architecture":"RandomForestClassifier",
      "mlm:framework_version":"1.4.2",
      "ml-model:prediction_type":"segmentation",
      "ml-model:learning_approach":"supervised",
      "mlm:accelerator_constrained":true,
      "ml-model:training-processor-type":"cpu"
   },
   "stac_extensions":[
      "https://stac-extensions.github.io/eo/v1.1.0/schema.json",
      "https://stac-extensions.github.io/ml-model/v1.0.0/schema.json",
      "https://crim-ca.github.io/mlm-extension/v1.2.0/schema.json",
      "https://stac-extensions.github.io/raster/v1.1.0/schema.json",
      "https://stac-extensions.github.io/file/v2.1.0/schema.json"
   ],
   "stac_version":"1.0.0"
}